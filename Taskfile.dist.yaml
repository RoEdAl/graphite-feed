#
# openwrt-go-graphite
#

version: '3'

tasks:
  feeds-configure:
    desc: Configure feeds
    dir: openwrt-sdk
    cmds:
      - cp feeds.conf.default feeds.conf
      - echo 'src-link graphite {{joinPath .ROOT_DIR "packages"}}' >> feeds.conf

  feeds-install:
    desc: Install and/or update feeds
    dir: openwrt-sdk
    cmds:
      - ./scripts/feeds update -a
      - ./scripts/feeds install -a
      - ./scripts/feeds install go-carbon carbonapi carbon-c-relay-full carbon-c-relay-nossl carbon-c-relay-tiny

  sdk-configure:
    desc: Configure OpenWRT SDK
    dir: openwrt-sdk
    cmds:
      - cp {{joinPath .ROOT_DIR "openwrt" "diffconfig" }} .config
      - make defconfig

  package-compile:
    desc: Compile package
    dir: openwrt-sdk
    cmds:
      - make package/carbon-c-relay/compile {{.CLI_ARGS}}
      - make package/go-carbon/compile {{.CLI_ARGS}}
      - make package/carbonapi/compile {{.CLI_ARGS}}
      - make package/index

  package-clean:
    desc: Clean-up package
    dir: openwrt-sdk
    cmds:
      - make package/carbon-c-relay/clean {{.CLI_ARGS}}
      - make package/go-carbon/clean {{.CLI_ARGS}}
      - make package/carbonapi/clean {{.CLI_ARGS}}

  copy-packages:
    desc: Copy packages
    cmds:
      - cmd: mkdir -p feeds
      - cmd: |
          for p in openwrt-sdk/bin/packages/*/graphite; do
            s=${p%/graphite}
            s=${s#openwrt-sdk/bin/packages/}
            mkdir -p feeds/$s
            cp -r $p feeds/$s
          done

  create-index:
    desc: Create index.html
    internal: true
    dir: feeds
    silent: true
    requires:
      vars: ['DIR', 'TIMESTAMP']
    vars:
      SDIR: '{{.DIR | default "."}}'
      DOC_DIR: '{{.DIR | default "/"}}'
      INDEX_HTML: '{{joinPath .SDIR "index.html"}}'
      HTML_HEADER: >-
        <!DOCTYPE html>
        <html>
        <header><title>Directory listing of {{.DOC_DIR}}</title></header>
        <body>
        <h2>Directory Listing: <em>{{.DOC_DIR}}</em></h2>
        <ul>
      HTML_DIR_UP: >-
        {{if ne .SDIR  "."}}
        <li><a href=\"../index.html\"><b>⌈··⌉</b></a></li>
        {{end}}
      HTML_LIST:
        sh: |
          ls -1 --group-directories-first "{{.SDIR}}" --ignore=index.html --ignore=tmp | while read file; do
              if [ -d "{{.SDIR}}/${file}" ]; then
                echo "<li><a href=\"${file}/index.html\"><b>[${file}]</b></a></li>"
              elif [ "${file##*.}" = "ipk" ]; then
                echo "<li><a href=\"${file}\"><em>${file}</em></a></li>"
              else
                echo "<li><a href=\"${file}\">${file}</a></li>"
              fi
          done
      HTML_FOOTER: >-
        </ul>
        <hr/>
        <p>Generated on {{.TIMESTAMP}}</p></body></html>

    cmds:
      - cmd: "echo 'HTML index: {{.INDEX_HTML}}'"
      - cmd: |
          cat << EOF > "{{.INDEX_HTML}}"
          {{.HTML_HEADER}}
          {{.HTML_DIR_UP}}
          {{.HTML_LIST}}
          {{.HTML_FOOTER}}
          EOF

  directory-listing:
    desc: List feeds directory
    dir: feeds
    vars:
      TIMESTAMP: '{{date "2006-01-02T15:04:05Z07:00" now}}'
      DIRS:
        sh: find . -type d -not -path '*/[@.]*' -not -path '*/tmp' -printf '%P\n'
    cmds:
      - cmd: touch -d "{{.TIMESTAMP}}" .nojekyll
      - for: { var: DIRS, split: "\n" }
        task: create-index
        vars:
          DIR: '{{.ITEM}}'
          TIMESTAMP: '{{.TIMESTAMP}}'

  default:
    desc: Build packages
    cmds:
      - task: feeds-configure
      - task: feeds-install
      - task: sdk-configure
      - task: package-clean
      - task: package-compile
      - task: copy-packages
