#
# openwrt-go-graphite
#

version: '3'

includes:
  dev: task/dev

env:
  LC_COLLATE: en_US.utf8

vars:
  PKGS: >-
    carbon-c-relay
    go-carbon
    carbonapi
    carbon-relay-ng
    gostatsd
    collectd-statsd
    go-task
    {{if .PKG_GRAFANA|default 0|int|ne 0}}grafana{{end}}
    {{if .PKG_TELEGRAF|default 0|int|ne 0}}telegraf-bin{{end}}

  PKGS_EXT: >-
    carbon-c-relay-full carbon-c-relay-nossl carbon-c-relay-tiny
    go-carbon
    carbonapi
    carbon-relay-ng
    gostatsd
    collectd-statsd
    go-task
    {{if .PKG_GRAFANA|default 0|int|ne 0}}grafana-bin{{end}}
    {{if .PKG_TELEGRAF|default 0|int|ne 0}}telegraf-bin{{end}}

tasks:
  signing-key-create:
    desc: Prepare signing keys
    status:
      - test -s signing-key/key-build
      - test -s signing-key/key-build.pub
    preconditions:
      - sh: test -x openwrt-sdk/staging_dir/host/bin/usign
        msg: usign utility not found
    cmds:
      - cmd: mkdir -p signing-key
      - cmd: |
          #
          # https://openwrt.org/docs/guide-user/security/keygen#obtain_usign
          #
          openwrt-sdk/staging_dir/host/bin/usign -G \
            -c 'OpenWRT usign key of Edmunt Pienkowsky' \
            -s signing-key/key-build \
            -p signing-key/key-build.pub
        silent: true

  signing-key-fingerprint:
    desc: Compute fingerprint of signing key
    deps:
      - signing-key-create
    preconditions:
      - sh: test -x openwrt-sdk/staging_dir/host/bin/usign
        msg: usign utility not found
      - sh: test -s signing-key/key-build.pub
        msg: Signing key not found
    vars:
      FINGERPRINT:
        sh: openwrt-sdk/staging_dir/host/bin/usign -F -p signing-key/key-build.pub
    cmds:
      - echo '{{.FINGERPRINT}}' > signing-key/fingerprint
      - touch -cr signing-key/key-build.pub signing-key/fingerprint

  signing-key-copy:
    desc: Copy signing keys to OpenWRT SDK directory
    status:
      - test -s openwrt-sdk/key-build
      - test -s openwrt-sdk/key-build.pub
    preconditions:
      - sh: test -d openwrt-sdk
        msg: OpenWRT SDK not installed
    deps:
      - signing-key-create
    cmds:
      - cmd: cp signing-key/key-build openwrt-sdk
        silent: true
      - cmd: cp signing-key/key-build.pub openwrt-sdk
        silent: true

  signing-key-init:
    internal: true
    cmds:
      - task: signing-key-create
      - task: signing-key-fingerprint
      - task: signing-key-copy

  signing-key-publish:
    desc: Publish signing key
    preconditions:
      - sh: test -s signing-key/key-build.pub
        msg: Signing key not found
      - sh: test -s signing-key/fingerprint
        msg: Fingerprint of signing key not found
      - sh: test -d feeds
        msg: Fedds directory does not exitst
    vars:
      FINGERPRINT:
        sh: cat signing-key/fingerprint
    cmds:
      - mkdir -p feeds/signing-key
      - cp signing-key/key-build.pub feeds/signing-key/{{.FINGERPRINT}}

  feeds-configure:
    desc: Configure feeds
    dir: openwrt-sdk
    status:
      - test -s feeds.conf
    cmds:
      - cp feeds.conf.default feeds.conf
      - echo 'src-link graphite {{joinPath .ROOT_DIR "packages"}}' >> feeds.conf

  feeds-install:
    desc: Install and/or update feeds
    dir: openwrt-sdk
    cmds:
      - ./scripts/feeds update -a
      - task: 'dev:packages-apply-patch'
      - ./scripts/feeds install -a
      - ./scripts/feeds install {{.PKGS_EXT}}

  feeds-init:
    internal: true
    cmds:
      - task: feeds-configure
      - task: feeds-install

  sdk-configure:
    desc: Configure OpenWRT SDK
    dir: openwrt-sdk
    status:
      - test -s .config
    cmds:
      - cp {{joinPath .ROOT_DIR "openwrt" "diffconfig" | relPath .TASK_DIR | shellQuote}} .config
      - make defconfig

  package-compile:
    desc: Compile packages
    dir: openwrt-sdk
    cmds:
      - for: { var: PKGS }
        cmd: make package/{{.ITEM}}/compile {{.CLI_ARGS}}

  package-clean:
    desc: Clean-up packages
    dir: openwrt-sdk
    cmds:
      - for: { var: PKGS }
        cmd: make package/{{.ITEM}}/clean {{.CLI_ARGS}}

  package-index:
    desc: Index packages
    dir: openwrt-sdk
    cmds:
      - make package/index

  copy-pkgs-*:
    internal: true
    label: copy-pkgs-{{index .MATCH 0 | dir | base}}
    vars:
      ARCH: '{{index .MATCH 0 | dir | base}}'
      PKG_DIR: '{{index .MATCH 0 | joinPath "openwrt-sdk" "bin" "packages"}}'
      DST_DIR: '{{joinPath "feeds" .ARCH}}'
    cmds:
      - mkdir -p {{.DST_DIR}}
      - cp -a {{.PKG_DIR}} {{.DST_DIR}}
      - touch -cr {{dir .PKG_DIR}} {{.DST_DIR}}

  package-copy-to-feeds:
    desc: Copy packages to feeds
    vars:
      PKG_DIRS:
        sh: |
          for p in openwrt-sdk/bin/packages/*/graphite; do
            echo ${p#openwrt-sdk/bin/packages/}
          done
    cmds:
      - cmd: mkdir -p feeds
      - for:
          var: PKG_DIRS
        task:  copy-pkgs-{{.ITEM}}

  create-index:
    desc: Create index.html
    internal: true
    dir: feeds
    silent: true
    requires:
      vars: ['DIR', 'TIMESTAMP']
    vars:
      SDIR: '{{.DIR | default "."}}'
      DOC_DIR: '{{joinPath "/" .DIR}}'
      INDEX_HTML: '{{joinPath .SDIR "index.html"}}'
      HTML_HEADER: >-
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <title>Directory listing of {{.DOC_DIR}}</title>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            ul        { list-style-type: circle }
            li.updir  { list-style-type: none; font-size: larger; font-weight: bold }
            li.feed   { list-style-type: disc; font-weight: bold }
            li.feed:before   { content: "\2772\2009" }
            li.feed:after    { content: "\2009\2773" }
            li.folder:before { content: "\2329\2009" }
            li.folder:after  { content: "\2009\232A" }
            li.folder { font-weight: bold }
            li.ipk    { list-style-type: disclosure-closed; font-size: larger }
            li.script { list-style-type: square; font-size: larger; font-family: monospace; }
            footer { text-align: center }
          </style>
        </head>
        <body>
        <h1>Directory Listing: <em>{{.DOC_DIR}}</em></h1>
        <ul>
      HTML_DIR_UP: >-
        {{if ne .SDIR  "."}}
        <li class="updir"><a href="..">··</a></li>
        {{end}}
      HTML_LIST:
        sh: |
          ls -1 --group-directories-first "{{.SDIR}}" --ignore=index.html --ignore=tmp | while read file; do
              ehref="$file"
              if [ -d "{{.SDIR}}/${file}" ]; then
                if [ -d "{{.SDIR}}/${file}/graphite" ]; then
                  eclass=feed
                else
                  eclass=folder
                fi
              elif [ "${file##*.}" = "ipk" ]; then
                eclass=ipk
              elif [ "${file##*.}" = "sh" ]; then
                eclass=script
              else
                eclass=file
              fi
              echo "<li class=\"${eclass}\"><a href=\"${ehref}\">${file}</a></li>"
          done
      HTML_FOOTER: >-
        </ul>
        <footer>Generated on <code>{{.TIMESTAMP}}</code>.</footer></body></html>

    cmds:
      - cmd: "echo 'Creating index: {{.INDEX_HTML}}'"
      - cmd: |
          cat << EOF > "{{.INDEX_HTML}}"
          {{.HTML_HEADER}}
          {{trim .HTML_DIR_UP}}
          {{.HTML_LIST}}
          {{.HTML_FOOTER}}
          EOF

  directory-listing:
    internal: true
    dir: feeds
    requires:
      vars:
        - TIMESTAMP
    vars:
      DIRS:
        sh: find . -type d -not -path '*/[@.]*' -not -path '*/tmp' -printf '%P\n'
    cmds:
      - for: { var: DIRS, split: "\n" }
        task: create-index
        vars:
          DIR: '{{.ITEM}}'
          TIMESTAMP: '{{.TIMESTAMP}}'    

  feeds-prepare:
    desc: Prepare feeds directory
    dir: feeds
    vars:
      TIMESTAMP: '{{date "2006-01-02T15:04:05Z07:00" now}}'
    cmds:
      - cmd: touch -d "{{.TIMESTAMP}}" .nojekyll
      - cmd: cp ../openwrt/graphite-feed.sh .
      - task: signing-key-publish
      - task: directory-listing
        vars:
          TIMESTAMP: '{{.TIMESTAMP}}'

  default:
    aliases:
      - build
    desc: Build packages
    deps:
      - signing-key-init
      - feeds-init
    cmds:
      - task: sdk-configure
      - task: package-clean
      - task: package-compile
      - task: package-index

